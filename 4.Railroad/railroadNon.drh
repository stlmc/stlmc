#define V -8.0

[-20, 100] tx;
[0, 90] bx;
[-20, 20] vbx;

[0, 1] time;

{mode 1;

  invt: (tx <= 95);
        (tx >= 40);
        (bx >= 0);
        (bx < 90);
  flow:
        d/dt[tx] = V; 
        d/dt[bx] = 0;
        d/dt[vbx] = 0;
  jump:
        (tx < 40) ==> 
        @2 (and (tx' = tx) (bx' = bx) (vbx' = vbx));
}
{mode 2;

  invt: (tx < 40);
        (tx >= 20);
        (bx >= 0);
        (bx < 90);
  flow:
        d/dt[tx] = V;
        d/dt[bx] = 0;
        d/dt[vbx] = 0;
  jump:
        (tx < 30) ==> 
        @3 (and (tx' = tx) (bx' = bx) (vbx' = vbx));
}
{mode 3;

  invt:(tx < 40);
        (tx >= 20);
        (bx > 0);
        (bx <= 90);
  flow:
        d/dt[tx] = V;
        d/dt[bx] = vbx;
        d/dt[vbx] = 5;
  jump:
        (tx < 20) ==> 
        @4 (and (tx' = tx) (bx' = bx) (vbx' = vbx));
}
{mode 4;

  invt: (tx < 20);
        (tx >= 5);
        (bx > 0);
        (bx <= 90); 
  flow:
        d/dt[tx] = V;
        d/dt[bx] = vbx;
        d/dt[vbx] = 10;
  jump:
        (tx < 5) ==> 
        @5 (and (tx' = tx) (bx' = bx) (vbx' = vbx));
}
{mode 5;
        
  invt: (tx < 20);
        (tx >= 5);
        (bx >= 0);
        (bx < 90);
  flow:
        d/dt[tx] = V;
        d/dt[bx] = vbx;
        d/dt[vbx] = -5;
  jump:
        (tx < 0) ==> 
        @6 (and (tx' = tx) (bx' = bx) (vbx' = vbx));
}
{mode 6;
        
  invt: (tx < 20);
        (tx >= 5);
        (bx > 0);
        (bx <= 90);
  flow:
        d/dt[tx] = V;
        d/dt[bx] = vbx;
        d/dt[vbx] = 0;
  jump:
        (tx < -5) ==> 
        @1 (and (tx' = 85) (bx' = bx) (vbx' = vbx));
}
init:
@1  (and (vbx = 0) (bx = 0) (tx >= 60) (tx <= 70));
goal:
@1 true;
@2 true;
@3 true;
@4 true;
@5 true;
@6 true;


