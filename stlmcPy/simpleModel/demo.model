const int c = 4 ;
real heater;
(-inf, inf) constx;
{
    mode:
        heater >= 0;
    inv:
        (heater < c) ;
        (constx > -10) ;
        (or (constx > -15) (constx < 20)) ;
        (and (constx > 0) (constx < 50));
    flow:
        constx(t) = 1.2 * (-t) + constx(0);
    jump:
        (constx > 30) =>
          ((heater' = heater + 1) and (constx' = constx));
	(heater > c) =>
	  ((heater' = heater - 1) and (constx' = constx)) ;
        (constx <= 24) =>
          ((heater' = -1) and (constx' = constx));
}
{
    mode:
        heater < 0;
    inv:
        constx <= 30;
    flow:
        d/dt[constx] = 4;
    jump:
        (constx > 30) =>
          ((heater' = heater + 1) and (constx' = constx));
        (heater > 8) =>
          ((heater' = heater - 1) and (constx' = constx)) ;
        (constx <= 24) =>
          ((heater' = -1) and (constx' = constx));
}

init:
(and (heater > 0) (heater < 2) (constx <= 25 + 0.1) (constx >= 25 - 0.1)); 

propositions:
reachability = constx > 24;

goal:
(<> [0.0, 40.0] (reachability)) ;
([] [0.0, inf) (constx < 24)) ;
