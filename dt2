[<stlmcPy.objects.goal.NewStlGoal object at 0x7f8957c2d198>]
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60))))
counter_Consts
None
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2)
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859183432_1_0: False, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not (= (not False) bool newForall#140227859185448_1_1)), (not (= (not False) bool newForall#140227859183824_1_0))}
===========
0
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newForall#140227859183432_1_0: False, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not bool newForall#140227859185056_1_1), (not (= (not False) bool newForall#140227859183824_1_0)), (not bool newForall#140227859183432_1_0), (not (= (not False) bool newForall#140227859185448_1_1)), (not bool newForall#140227859183824_1_0), (not bool newForall#140227859185448_1_1)}
===========
1
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newForall#140227859183432_1_0: False, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not bool newForall#140227859185056_1_1), (not (= (not False) bool newForall#140227859183824_1_0)), (not bool newForall#140227859183432_1_0), (not (= (not False) bool newForall#140227859185448_1_1)), (not bool newForall#140227859183824_1_0), (not bool newForall#140227859185448_1_1)}
===========
2
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newForall#140227859183432_1_0: False, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not bool newForall#140227859185056_1_1), (not (= (not False) bool newForall#140227859183824_1_0)), (not bool newForall#140227859183432_1_0), (not (= (not False) bool newForall#140227859185448_1_1)), (not bool newForall#140227859183824_1_0), (not bool newForall#140227859185448_1_1)}
===========
3
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newForall#140227859183432_1_0: False, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not bool newForall#140227859185056_1_1), (not (= (not False) bool newForall#140227859183824_1_0)), (not bool newForall#140227859183432_1_0), (not (= (not False) bool newForall#140227859185448_1_1)), (not bool newForall#140227859183824_1_0), (not bool newForall#140227859185448_1_1)}
===========
4
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
total
{bool newForall#140227859185056_1_1: False, (<= real tau_2 60): True, bool newForall#140227859183432_1_0: False, bool newIntegral#_0_0: True, (< real tx_0_t 50): True, bool newForall#140227859183824_1_0: False, bool newForall#140227859185448_1_1: False, (<= real tau_0 60): True, (<= 0 real tau_2): True, (<= 0 real tau_1): True, (< real tau_1 real tau_2): True, (>= real tx_0_0 85): True, (< real tau_0 real tau_1): True, (= real tx_1_0 real tx_0_t): True, (<= real tau_1 60): True, (<= 0 real tau_0): True, bool newIntegral#_0_1: True, (= real tx_2_0 real tx_1_t): True, (< real tx_1_t 50): True}
c_sat
{(<= 0 real tau_1), (< real tau_1 real tau_2), (= False bool newForall#140227859185056_1_1), (<= real tau_2 60), (>= real tx_0_0 85), (< real tau_0 real tau_1), (<= 0 real tau_2), bool newIntegral#_0_0, (= False bool newForall#140227859183432_1_0), (= real tx_1_0 real tx_0_t), (<= real tau_1 60), (<= 0 real tau_0), bool newIntegral#_0_1, (= real tx_2_0 real tx_1_t), (< real tx_0_t 50), (< real tx_1_t 50), (<= real tau_0 60)}
c_unsat
{(not bool newForall#140227859185056_1_1), (not (= (not False) bool newForall#140227859183824_1_0)), (not bool newForall#140227859183432_1_0), (not (= (not False) bool newForall#140227859185448_1_1)), (not bool newForall#140227859183824_1_0), (not bool newForall#140227859185448_1_1)}
===========
5
===========
abstracted_consts
<class 'stlmcPy.constraints.constraints.And'>
(and (and (and (and (and (and (and (and (and (= real vb_0 0) (>= real tx_0_0 85)) (or bool newIntegral#_0_0) (or (and (and ))) (or (and (and (= real vb_0 0)) (or (and (< real tx_0_t 50) (and (= real vb_1 5) (= real tx_1_0 real tx_0_t))) (and (= real vb_1 real vb_0) (= real tx_1_0 real tx_0_t))))) (or bool newIntegral#_0_1) (or (and (and ))) (or (and (and (= real vb_1 0)) (or (and (< real tx_1_t 50) (and (= real vb_2 5) (= real tx_2_0 real tx_1_t))) (and (= real vb_2 real vb_1) (= real tx_2_0 real tx_1_t)))))) (and (and (or (or (= bool reachability_0 bool newForall#140227859183432_1_0) (= (not bool reachability_0) bool newForall#140227859183824_1_0)))) (and (or (or (= bool reachability_1 bool newForall#140227859185056_1_1) (= (not bool reachability_1) bool newForall#140227859185448_1_1)))) (and ) (and (<= 0 real tau_0) (<= real tau_0 60) (< real tau_0 real tau_1) (<= 0 real tau_1) (<= real tau_1 60) (< real tau_1 real tau_2) (<= 0 real tau_2) (<= real tau_2 60)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85)))) (or (not bool newForall#140227859185056_1_1) (not bool newIntegral#_0_0) (not (< real tx_0_t 50)) (not (<= real tau_2 60)) (not (<= real tau_1 60)) (not bool newForall#140227859183432_1_0) (not bool newIntegral#_0_1) (not (< real tau_0 real tau_1)) (not (= real tx_1_0 real tx_0_t)) (not (<= 0 real tau_0)) (not (<= 0 real tau_2)) (not (<= real tau_0 60)) (not (< real tau_1 real tau_2)) (not bool newForall#140227859185448_1_1) (not (= real tx_2_0 real tx_1_t)) (not bool newForall#140227859183824_1_0) (not (< real tx_1_t 50)) (not (<= 0 real tau_1)) (not (>= real tx_0_0 85))))
counter_Consts
[(not bool newForall#140227859185056_1_1), (not bool newIntegral#_0_0), (not (< real tx_0_t 50)), (not (<= real tau_2 60)), (not (<= real tau_1 60)), (not bool newForall#140227859183432_1_0), (not bool newIntegral#_0_1), (not (< real tau_0 real tau_1)), (not (= real tx_1_0 real tx_0_t)), (not (<= 0 real tau_0)), (not (<= 0 real tau_2)), (not (<= real tau_0 60)), (not (< real tau_1 real tau_2)), (not bool newForall#140227859185448_1_1), (not (= real tx_2_0 real tx_1_t)), (not bool newForall#140227859183824_1_0), (not (< real tx_1_t 50)), (not (<= 0 real tau_1)), (not (>= real tx_0_0 85))]
============
And(0 == vb_0,
    85 <= tx_0_0,
    newIntegral#_0_0,
    Or(And(vb_1 == vb_0, tx_1_0 == tx_0_t),
       And(Not(50 <= tx_0_t), 5 == vb_1, tx_1_0 == tx_0_t)),
    newIntegral#_0_1,
    0 == vb_1,
    Or(And(vb_2 == vb_1, tx_2_0 == tx_1_t),
       And(Not(50 <= tx_1_t), 5 == vb_2, tx_2_0 == tx_1_t)),
    Or(reachability_0 == newForall#140227859183432_1_0,
       Not(reachability_0) == newForall#140227859183824_1_0),
    Or(reachability_1 == newForall#140227859185056_1_1,
       Not(reachability_1) == newForall#140227859185448_1_1),
    0 <= tau_0,
    60 >= tau_0,
    Not(tau_1 <= tau_0),
    0 <= tau_1,
    60 >= tau_1,
    Not(tau_2 <= tau_1),
    0 <= tau_2,
    60 >= tau_2,
    Or(Not(tx_1_0 == tx_0_t),
       Not(newForall#140227859183432_1_0),
       Not(newForall#140227859185056_1_1),
       50 <= tx_1_t,
       tau_1 <= tau_0,
       tau_2 <= tau_1,
       Not(0 <= tau_2),
       Not(60 >= tau_0),
       Not(tx_2_0 == tx_1_t),
       Not(0 <= tau_0),
       Not(newIntegral#_0_1),
       Not(newForall#140227859183824_1_0),
       Not(60 >= tau_2),
       Not(85 <= tx_0_0),
       Not(newIntegral#_0_0),
       Not(60 >= tau_1),
       50 <= tx_0_t,
       Not(0 <= tau_1),
       Not(newForall#140227859185448_1_1)))
Traceback (most recent call last):
  File "./stlmc", line 9, in <module>
    hehe = driver.run("./stlmcPy/tests/benchmark_models/linear/railroadLinear.model", True)
  File "/home/leejia/stlHylaa/STL/stlmcPy/driver/driver.py", line 233, in run
    result, size = solver.solve(And([model_const, goal_const]), model.range_dict)
  File "/home/leejia/stlHylaa/STL/stlmcPy/solver/hylaa.py", line 86, in solve
    new_abstracted_consts = substitution(abstracted_consts, new_alpha)
  File "/usr/lib/python3.6/functools.py", line 807, in wrapper
    return dispatch(args[0].__class__)(*args, **kw)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/operations.py", line 76, in _
    if const in substitution_dict:
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 202, in __hash__
    return hash(str(self))
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 67, in __repr__
    repr_str += (str(c) + comma)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 67, in __repr__
    repr_str += (str(c) + comma)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 385, in __repr__
    return "(or " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 385, in __repr__
    return "(or " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 64, in __repr__
    if str(c) == str(last_key):
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 377, in __repr__
    return "(and " + MultinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 199, in __repr__
    return Multinary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 65, in __repr__
    repr_str += str(c)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 450, in __repr__
    return "(= " + BinaryFormula.__repr__(self) + ")"
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 187, in __repr__
    return Binary.__repr__(self)
  File "/home/leejia/stlHylaa/STL/stlmcPy/constraints/constraints.py", line 44, in __repr__
    return str(self.left) + " " + str(self.right)
KeyboardInterrupt
