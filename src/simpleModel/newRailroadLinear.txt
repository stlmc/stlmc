# Declare mode variables
real gateVel;

# Declare continuous variables
[-10, 25] trainPosition;
[-10, 150] gateHeight;

# Mode definition when gate is closed
{
    mode:
        gateVel == -2 ;
    inv:
        (and (gateHeight > 0) (gateHeight < 10)) ;
	(and (trainPosition >= -5) (trainPosition < 5.1)) ; 
    flow:
        d/dt[trainPosition] = 4;
        d/dt[gateHeight] = -2;
    jump:
        (and (trainPosition >= 4.9) (trainPosition < 5.1)) ==>
          (and (gateVel' = 3) (trainPosition' = trainPosition) (gateHeight' = gateHeight));
}

# Mode definition when gate is open
{
    mode:
        gateVel == 3 ;
    inv:
    	gateHeight > 0;
    flow:
        d/dt[trainPosition] = 4;
        d/dt[gateHeight] = 1.5 ;
    jump:
        (and (trainPosition >= 17.9) (trainPosition < 18.1)) ==>
          (and (gateVel' = -2) (trainPosition' = trainPosition - 25) (gateHeight' = gateHeight));
}

# Initial condition
init:
(and (gateVel == -2) (trainPosition >= 0) (trainPosition < 0.1) (gateHeight < 1) (gateHeight >= 0) ) ;

# Proposition declare
propositions:
reachability = trainPosition < 10;
ghl5 = gateHeight < 5 ;
gClosed = gateVel == -2;
gOpen = gateVel == 3;


# STL forms requirements declare
goal:
([] [0.0, 50.0) (trainPosition < 10 -> ghl5)) ;
(<> [0.0,40.0] (ghl5 U[0.0, 5.0] trainPosition > 3)) ;
([] [0.0, 20.0) (~reachability));
([] [0.0, 75.0] (gClosed U[2.0, 12.0] gOpen)) ;

