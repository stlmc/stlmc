const int c = 4 ;
real heater;
(-inf, inf) x;
{
    mode:
        heater >= 0;
    inv:
        (heater < c) ;
        (x > -10) ;
        (or (x > -15) (x < 20)) ;
        (and (x > 0) (x < 50));
    flow:
        x(t) = 1.2 * (-t) + x(0);
    jump:
        (x > 30) =>
          ((heater' = heater + 1) and (x' = x));
	(heater > 3) =>
	  ((heater' = heater - 1) and (x' = x)) ;
        (x <= 24) =>
          ((heater' = -1) and (x' = x));
}
{
    mode:
        heater < 0;
    inv:
        x <= 30;
    flow:
        d/dt[x] = 4;
    jump:
        (x > 30) =>
          ((heater' = heater + 1) and (x' = x));
        (heater > 8) =>
          ((heater' = heater - 1) and (x' = x)) ;
        (x <= 24) =>
          ((heater' = -1) and (x' = x));
}

init:
(and (heater > 0) (heater < 2) (x <= 25 + 0.1) (x >= 25 - 0.1)); 

propositions:
reachability = x > 23;

goal:
(<> [0.0, 40.0] (reachability)) ;
#([] [0.0, inf) (x < 24)) ;
