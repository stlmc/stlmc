bool a;
[-20, 100] x1;
{
    mode:
        a = false;
    inv:
        x1 > 0;
    flow:
        d/dt[x1] = -1;
    jump:
        ((x1 > 26) and (x1 > 28)) =>
          ((not a') and (x1' = x1));
        (x1 <= 24) =>
          (and (a') (x1' = x1));
}
{
    mode:
        a = true;
    inv:
        x1 < 50;
    flow:
        d/dt[x1] = 1;
    jump:
        (x1 > 26) =>
          (and (not a') (x1' = x1));
        (x1 <= 24) =>
          (and (a') (x1' = x1));
}
init:
(and (not(a)) (x1 <= 20 + 0.1) (x1 >= 20 - 0.1)); 

propositions:
#reachability = (x1 < 27 or x1 > 29);

#goal:
# ([] [0.0, 40.0] (a = true -> [] [0.0, 5.0] x1 > 27 )) ;

reachability = x1 <= 21 ;
#x2l20 = x2 <= 20 ;
#x1l21 = x1 <= 21;
#x1T = a ;
#x2T = b ;

goal:
(<> [0.0, 40.0] (~reachability)) ;

