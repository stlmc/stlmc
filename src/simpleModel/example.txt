real h1;
real h2;
[-20, 100] x1;
[-20, 100] x2;
[-20, 100] constx1;
[-20, 100] constx2;
{
    mode:
        h1 == 0;
        h2 == 0; 
    inv:
        x1 > 22;
        (x2 > 22);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = -0.025 * ((1 - 2 * 0.01) * constx1 - 0.01 * constx2);
        d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 - 0.01 * constx1);
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 160) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 120) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 100) (h2' = 140) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
}
{
    mode:
        h1 == 0 ;
        h2 >= 120 ;
        h2 <= 170 ;
    inv:
        x1 > 22;
        (x2 < 27);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = -0.025 * ((1 - 2 * 0.01) * constx1 - 0.01 * constx2);
        d/dt[x2] = 0.045 * (h2 -((1 - 2 * 0.01) * constx2 - 0.01 * constx1));
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 160) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 120) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 100) (h2' = 140) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
}
{
    mode:
        h1 >= 80 ;
        h1 <= 130 ;
        h2 == 0 ;
    inv:
        x1 < 27 ;
        (x2 > 22);
    flow:
        constx1(t) = constx1(0);
        constx2(t) = constx2(0);
        x1(t) = 0.013 * h1 + 0.025 * (1 - 0.0246 * t) + 0.006 * (1 - 0.0442 * t) + x1(0);
        x2(t) = 0.01 * (1 - 0.0246 * t + 0.0003 * (t ** 2)) + x2(0) ;
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 160) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 120) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 100) (h2' = 140) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
}
{
    mode:
        h1 >= 80 ;
        h1 <= 130 ;
        h2 >= 120 ;
        h2 <= 170 ;
    inv:
        x1 < 28;
        (x2 < 28);
    flow:
        constx1(t) = constx1(0) ;
        constx2(t) = constx2(0) ;
        x1(t) = 0.013 * h1 + 0.025 * (1 - 0.0246 * t) +  0.006 * (1 - 0.0442 * t) + x1(0) ; 
        x2(t) = 0.022 * h2 + 0.05 * (1- 0.0442 * t + 0.002 * (t ** 2)) + x2(0) ;  
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 0) (h2' = 160) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (h1' = 120) (h2' = 0) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (h1' = 100) (h2' = 140) (x1' = x1) (x2' = x2) (constx1' = x1) (constx2' = x2));
}
init:
(and (h1 == 0) (h2 == 0) (x1 <= 25 + 0.1) (x1 >= 25 - 0.1) (x2 <= 23 + 0.1) (x2 >= 23 - 0.1) ((constx1 == x1) and (constx2 == x2)));

propositions:
reachability = x1 < 23;
x2l20 = x2 <= 20 ;
x2g10 = x1 > 10;
x1T = h1 > 0 ;
x2T = h2 > 0 ;

goal:
(<> [0.0, 40.0] (reachability)) ;
#(~<> [0.0, 20.0] (x2l20 U[2.0, 12.0) x2g10)) ;
#([] [0.0, 10.0] (~x2l20 U[0.0, 5.0] x1T)) ;
#(<> [0.0, 20.0] ((~x1T and ~x2T) -> [][0.0, 5.0] (x1T and x2T))) ;




