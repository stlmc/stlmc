bool a;
[0, 10] x1;
bool b;
[0, 10] x2;
{
    mode:
        a = false;
        b = false ;
    inv:
        x1 > 0;
        (x2 > 0);
    flow:
        # d/dt[x1] = -0.025 * 2 * 9.806 / 2 * constx1 / (2 * 8) ; 
        # d/dt[x2] = (0.025 * 2 * 9.806 / 2 * (constx1 - constx2)) / (2 * 9) ;
	# x2(t) = 8 * c_1 * (1 - 0.03 * t) * ((1 + 0.0153 * t) - (1 + 0.014 * t)) + c_2 * (1 - 0.014 * t);


	# x1(t) = c_1 * (1- 0.0153 * t);
	# x2(t) = 0.0104 * c_1 * t - 0.014 * c_2 * t + c_2
	
	x1(t) = (1- 0.0153 * t);
	x2(t) = 0.0104 * t - 0.014 * t + 1;

    jump:
        (and (x1 >= 5) (x2 >= 5)) =>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 >= 5) (x2 < 5)) =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 >= 5)) =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 < 5)) =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2) );

}
{
    mode:
        a = false;
        b = true;
    inv:
        x1 > 0;
        (x2 < 9);
    flow:
        # d/dt[x1] = -0.025 * 2 * 9.806 / 2 * constx1 / (2 * 8) ;
        # d/dt[x2] = (0.015 + 0.025 * 2 * 9.806 / 2 * (constx1 - constx2)) / (2 * 9) ;

	# x2(t) = 8 * c_1 * (1 - 0.03 * t) * ((1 + 0.015 * t) - (1 + 0.014 * t)) + c_2 * (1 - 0.014 * t) + 0.06
	# x1(t) = c_1 * (1 - 0.0153 * t);
	# x2(t) = 0.01 * c_1 * t - 0.014 * c_2 * t + c_2 + 0.06;
	
	x1(t) = (1 - 0.0153 * t);
	x2(t) = 0.01 * t - 0.014 * t + 1.06;

    jump:
        (and (x1 >= 5) (x2 >= 5)) =>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 >= 5) (x2 < 5)) =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 >= 5)) =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 < 5)) =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2) );
}
{
    mode:
        a = true;
        b = false;
    inv:
        x1 < 8;
        (x2 > 0);
    flow:
        # d/dt[x1] = (0.025 - 0.025 * 2 * 9.806 / 2 * constx1) / (2 * 8) ; 
        # d/dt[x2] = (0.025 * 2 * 9.806 / 2 * (constx1 - constx2)) / (2 * 9) ; 

	# x1(t) = c_1 * (1- 0.0153 * t);
	# x2(t) = 0.01 * c_1 * t - 0.014 * c_2 * t + c_2 + 0.1;
	
	x1(t) = (1- 0.0153 * t);
	x2(t) = 0.01 * t - 0.014 * t + 1.1;

    jump:
        (and (x1 >= 5) (x2 >= 5)) =>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 >= 5) (x2 < 5)) =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 >= 5)) =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 < 5)) =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2) );
}
{
    mode:
        a = true;
        b = true;
    inv:
        x1 < 9;
        (x2 < 8);
    flow:
        # d/dt[x1] = (0.025 - 0.025 * 2 * 9.806 / 2 * constx1) / (2 * 8) ;
        # d/dt[x2] = (0.015 + 0.025 * 2 * 9.806 / 2 * (constx1 - constx2)) / (2 * 9)
	
	# x1(t) = c_1 * (1- 0.0153 * t) + 0.1;
	# x2(t) = 0.01 * c_1 * t - 0.014 * c_2 * t + c_2 + 0.16;
	x1(t) = (1- 0.0153 * t) + 0.1;
	x2(t) = 0.01 * t - 0.014 * t + 1.16;

    jump:
        (and (x1 >= 5) (x2 >= 5)) =>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 >= 5) (x2 < 5)) =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 >= 5)) =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 < 5) (x2 < 5)) =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
init:
(and (a = false) (b = false) (x1 <= 5 + 0.1) (x1 >= 5 - 0.1) (x2 <= 5 + 0.1) (x2 >= 5 - 0.1) );

propositions:
reachability = x1 > 5.1 ;
x1T = a;
x1g5 = x1 > 5.5 ;
x1l4 = x1 < 4.9 ;
x2T = b;

goal:
([] [0.0, 50.0] (and (x1 > 0) (x1 <= 9) (x2 > 0) (x2 <= 9))) ;
(<> [5.0, 15.0] (~x1T -> <>[0.0, 7.0] (x1T and x1g5))) ;
([] [0.0, 10.0] (x1l4 -> <> [0.0, 10.0] reachability)) ;
([] [0.0, 20.0] ((x1T and x2T) -> <>[0.0, 5.0] ~(x1T and x2T))) ;



