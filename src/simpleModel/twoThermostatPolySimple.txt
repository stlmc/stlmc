bool a;
[-20, 100] x1;
bool b;
[-20, 100] x2;

# state
# 1 as on, -1 as off
# a == -1, b == -1
# ...
{
    mode:
        a == false;
        b == false;
    inv:
        x1 > 0;
        (x2 > 0);
    flow:
    	
        #d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * x1 + 0.01 * x2);
        #d/dt[x2] = -0.045 * ((1 - 2 * 0.01) * x2 + 0.01 * x1);

	# e ** (-0.0588t) : 1 - 0.0588 * t
	# e ** (0.0441023t) : 1 + 0.0441023 * t
	# e ** (0.0146977t) : 1 + 0.0146977 * t
	
	# x1(t) = c_1 * (1 - 0.0588 * t) * (0.0000780803 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) - 0.00510124 * c_2 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t))
	# x2(t) = 0.0000780742 * c_2 * (1 - 0.0588 * t) * (12807.3 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) - 0.0153037 * c_1 * (1 - 0.0588 * t) * (1 + 0.0441023 * t - (1 + 0.0146977 * t))

	# x1(t) = a * (-0.0026 * c_1 * t ** 2 - 0.0147 * c_1 * t + c_1) + x1(0);	
	# x2(t) = b * (-0.0441 * c_2 * t + c_2) + x2(0);

	x1(t) = (-0.0026 * t ** 2 - 0.0147 * t + 1) + x1(0);
	x2(t) = (-0.0441 * t + 1) + x2(0);

    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a == false;
        b == true;
    inv:
        x1 > 0;
        (x2 < 50);
    flow:

        # d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * x1 + 0.01 * x2);
        # d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));

	# x1(t) = c_1 * (1 - 0.0588 * t) * (0.0000780803 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) - 0.005 * c_2 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t)) - 2.08268
	# x1(t) = a * (-0.0026 * c_1 * t ** 2 + 0.0147 * c_1 * t + c_1 - 2.1) + x1(0);
	
	x1(t) = (-0.0026 * t ** 2 + 0.0147 * t - 1.1) + x1(0);
	
	
	# x2(t) = -0.0153 * c_1 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t)) + 0.0000780742 * c_2 * (1 - 0.0588 * t) * (12807.3 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) + 204.103
	# x2(t) = b * (-0.0441 * c_2 * t + c_2 + 204.0) + x2(0);
	x2(t) = (-0.0441 * t + 205.0) + x2(0);

    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
{
    mode:
        a == true;
        b == false;
    inv:
        x1 < 50;
        (x2 > 0);
    flow:
        
	# d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        # d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 + 0.01 * constx1);
	
	# x1(t) = c_1 * (1 - 0.0588 * t) * (0.000078 * (1 + 0.0146977 * t) + (1 + 0.00441023 * t)) - 0.005 * c_2 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t)) + 102.1
	# x1(t) = a * (0.054 * c_1 * t + c_1 + 102.1) + x1(0);
	
	x1(t) = (0.054 * t + 103.1) + x1(0);
	
	# x2(t) = -0.015 * c_1 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t)) + 0.0000780742 * c_2 * (1 - 0.0588 * t) * (12807.3 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) - 1.1
	# x2(t) = b * (-0.0441 * c_2 * t + c_2 - 1.1) + x2(0);
	x2(t) = (-0.0441 * t) + x2(0);

    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2) );
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2) );
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2) );
}
{
    mode:
        a == true;
        b == true;
    inv:
        x1 < 50;
        (x2 < 50);
    flow:
        # d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        # d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));
	
	# x1(t) = c_1 * (1 - 0.0588 * t) * (0.0000780803 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) - 0.0051 * c_2 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 + 0.0146977 * t)) + 99.9688
	# x1(t) = a * (-0.003 * c_1 * t ** 2 + 0.015 * c_1 * t + c_1 + 99.98) + x1(0);

	x1(t) = (-0.003 * t ** 2 + 0.015 * t + 100.98) + x1(0);
	
	# x2(t) = -0.015 * c_1 * (1 - 0.0588 * t) * ((1 + 0.0441023 * t) - (1 +0.0146977 * t)) + 0.0000780742 * c_2 * (1 - 0.0588 * t) * (12807.3 * (1 + 0.0146977 * t) + (1 + 0.0441023 * t)) + 203.1
	# x2(t) = b * (-0.0441 * c_2 * t + c_2 + 203.1) + x2(0);
	x2(t) = (-0.0441 * t + 204.1) + x2(0);

    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
init:
(and (a == false) (b == false) (x1 <= 20 + 0.1) (x1 >= 20 - 0.1) (x2 <= 20 + 0.1) (x2 >= 20 - 0.1));

propositions:
reachability = x1 < 27 ;
x2l20 = x2 <= 20 ;
x2g10 = x1 > 10;
x1T = a;
x2T = b;
x1F = not a;
x2F = not b;

goal:
(<> [0.0, 40.0] (~reachability)) ;
(<> [0.0, 20.0] (x2l20 U[2.0, 12.0) x2g10)) ;
([] [0.0, 10.0] (~x2l20 U[0.0, 5.0] x1T)) ;
([] [0.0, 20.0] ((x1F and x2F) -> [][0.0, 5.0] (x1T or x2T))) ;




