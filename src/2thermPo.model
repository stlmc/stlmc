bool a;
[-20, 100] x1;
bool b;
[-20, 100] x2;
{
    mode:
        a == false;
        b == false ;
    inv:
        x1 > 0;
        (x2 > 0);
    flow:
        #d/dt[constx1] = 0;
        #d/dt[constx2] = 0;
        #d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * constx1 + 0.01 * constx2);
        #d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 + 0.01 * constx1);
        x1(t) = 0.103586 * 2.72 ** (-0.0441023 * t) + 19.8964 * 2.72 ** (-0.0146977 * t)
        x2(t) = 20.3045 * 2.72 ** (-0.0441023 * t) - 0.304513 * 2.72 ** (-0.0146977 * t)
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a == false;
        b == true;
    inv:
        x1 > 0;
        (x2 < 50);
    flow:
        #d/dt[constx1] = 0;
        #d/dt[constx2] = 0;
        #d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * constx1 + 0.01 * constx2);
        #d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));
	x1(t) = -0.93743 * 2.72 ** (-0.0441023 * t) + 2.71051 * 10 ** (-20) * 2.72 ** (-0.0294046 * t) + 23.0201 * 2.72 ** (-0.0146977 * t) - 4.44089 * 10 ** (-16) * 2.72 ** (0.0294046 * t) - 2.08268
	x2(t) = 204.103 - 183.751 * 2.72 ** (-0.0441023 * t) + 2.08167 * 10 ** (-17) * 2.72 ** (-0.0294046 * t) - 0.352321 * 2.72 ** (-0.0146977 * t) + 6.93889 * 10 ** (-18) * 2.72 ** (0.0294046 * t)
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
{
    mode:
        a == true;
        b == false;
    inv:
        x1 < 50;
        (x2 > 0);
    flow:
        #d/dt[constx1] = 0;
        #d/dt[constx2] = 0;
        #d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        #d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 + 0.01 * constx1);
	x1(t) = 102.051 * 0.100931 * 2.72 ** (-0.0441023 * t) - 82.1524 * 2.72 ** (-0.0146977 * t)
	x2(t) = 19.784 * 2.72 ** (-0.0441023 * t) - 2.22045 * 10 ** (-16) * 2.72 ** (-0.0294046 * t) + 1.25734 * 2.72 ** (-0.0146977 * t) + 6.77626 * 10 ** (-21) * 2.72 ** (0.0294046 * t) - 1.04134
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
{
    mode:
        a == true;
        b == true;
    inv:
        x1 < 50;
        (x2 < 50);
    flow:
        #d/dt[constx1] = 0;
        #d/dt[constx2] = 0;
        #d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        #d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));
	x1(t) = 99.9688 - 0.940085 * 2.72 ** (-0.0441023 * t) - 1.73472 * 10 ** (-18) * 2.72 ** (-0.0294046 * t) - 79.0287 * 2.72 ** (-0.0146977 * t) - 4.44089 * 10 ** (-16) * 2.72 ** (0.0294046 * t)
	x2(t) = 203.062 - 184.271 * 2.72 ** (-0.0441023 * t) - 4.44089 * 10 ** (-16) * 2.72 ** (-0.0294046 * t) + 1.20953 * 2.72 ** (-0.0146977 * t) + 6.93889 * 10 ** (-18) * 2.72 ** (0.0294046 * t)
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
init:
(and (a == false) (b == false) (x1 <= 20 + 0.1) (x1 >= 20 - 0.1) (x2 <= 20 + 0.1) (x2 >= 20 - 0.1));

propositions:
reachability = x1 < 27 ;
x2l20 = x2 <= 20 ;
x2g10 = x1 > 10;
x1T = a ;
x2T = b ;

goal:
([] [0.0, 40.0] (~reachability)) ;
(~<> [0.0, 20.0] (x2l20 U[2.0, 12.0) x2g10)) ;
([] [0.0, 10.0] (~x2l20 U[0.0, 5.0] x1T)) ;
(<> [0.0, 20.0] ((~x1T and ~x2T) -> [][0.0, 5.0] (x1T and x2T))) ;




