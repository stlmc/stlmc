#define gH 5
#define g  9.806
#define a  0.025
#define A1 8
#define A2 9
#define q1 0.025
#define q2 0.015

[0, 10] x1;
[0, 10] x2;

[0, 1] time;

{mode 1;

  invt: (x1 > 0);
        (x2 > 0);
  flow:
        d/dt[x1] = -a * 2 * g / 2 * x1 / (2 * A1); 
        d/dt[x2] = (a * 2 * g / 2 * (x1 - x2)) / (2 * A2);
  jump:
        (and (x1 >= gH) (x2 >= gH)) ==> 
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 >= gH) (x2 < gH)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 >= gH)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 < gH)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 2;

  invt: (x1 > 0);
        (x2 <= A2);
  flow:
        d/dt[x1] = -a * 2 * g / 2 * x1 / (2 * A1);
        d/dt[x2] = (q2 + a * 2 * g / 2 * (x1 - x2)) / (2 * A2);
  jump:
        (and (x1 >= gH) (x2 >= gH)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 >= gH) (x2 < gH)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 >= gH)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 < gH)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 3;

  invt: (x1 <= A1);
        (x2 > 0);
  flow:
        d/dt[x1] = (q1 - a * 2 * g / 2 * x1) / (2 * A1);
        d/dt[x2] = (a * 2 * g / 2 * (x1 - x2)) / (2 * A2);
  jump:
        (and (x1 >= gH) (x2 >= gH)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 >= gH) (x2 < gH)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 >= gH)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 < gH)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 4;

  invt: (x1 <= A1);
        (x2 <= A2);
  flow:
        d/dt[x1] = (q1 - a * 2 * g / 2 * x1) / (2 * A1);
        d/dt[x2] = (q2 + a * 2 * g / 2 * (x1 - x2)) / (2 * A2);
  jump:
        (and (x1 >= gH) (x2 >= gH)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 >= gH) (x2 < gH)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 >= gH)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 < gH) (x2 < gH)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}


init:
@4  (and (x1 >= gH - 0.1) (x1 <= gH + 0.1) (x2 >= gH - 0.1) (x2 <= gH + 0.1));

goal:
@1  (and (or (x1 < gH - 1) (x1 > gH + 1)) (or (x2 < gH - 1) (x2 > gH + 1)));

