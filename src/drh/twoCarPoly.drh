[0, 100] x1;
[0, 100] x2;
[0, 100] y1;
[0, 100] y2;
[0, 10] v1;
[0, 10] v2;
[-1, 1] phi1;
[-1, 1] phi2;
[-1.5, 1.5] theta1;
[-1.5, 1.5] theta2;
[-1, 1] arbitraryPhi1;

[0, 1] time;

{mode 1;

  invt: arbitraryPhi1 >= -0.75;
        arbitraryPhi1 <= 0.75; 
  flow:
        d/dt[x1] = v1 * cos(theta1); 
        d/dt[x2] = v2 * cos(theta2);
        d/dt[y1] = v1 * sin(theta1);
        d/dt[y2] = v2 * sin(theta2);
        d/dt[v1] = 3;
        d/dt[v2] = -(v2 - v1);
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v2 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
  jump:
        (and ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) >= 36) ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) <= 81)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36) ==> 
          @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) > 81) ==>
          @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
}
{mode 2;

  invt: arbitraryPhi1 >= -0.75;
        arbitraryPhi1 <= 0.75;
  flow:
        d/dt[x1] = v1 * cos(theta1);
        d/dt[x2] = v2 * cos(theta2);
        d/dt[y1] = v1 * sin(theta1);
        d/dt[y2] = v2 * sin(theta2);
        d/dt[v1] = 7;
        d/dt[v2] = 5;
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v2 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
  jump:
        (and ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) >= 36) ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) <= 81)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36) ==>
          @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) > 81) ==>
          @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
}
{mode 3;

  invt: arbitraryPhi1 >= -0.75;
        arbitraryPhi1 <= 0.75;
  flow:
        d/dt[x1] = v1 * cos(theta1);
        d/dt[x2] = v2 * cos(theta2);
        d/dt[y1] = v1 * sin(theta1);
        d/dt[y2] = v2 * sin(theta2);
        d/dt[v1] = 2;
        d/dt[v2] = -5;
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v2 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
  jump:
        (and ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) >= 36) ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) <= 81)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36) ==>
          @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) > 81) ==>
          @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (v1' = v1) (v2' = v2) (phi1' = arbitraryPhi1) (phi2' = phi2) (theta1' = theta1) (theta2' = theta2));
}

init:
@1  (and (x1 > 0) (x1 < 3) (x2 > 5) (x2 < 10) (y1 > 3) (y2 < 10) (v1 >= 1) (v1 <=3) (v2 >= 3) (v2 <= 4) (theta1 > 0) (theta1 < 1) (theta2 > -1) (theta2 < 0) (phi1 >= 0) (phi2 <= 1) (phi2 >= -1) (phi2 <= 0));

goal:
@1 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36;
@2 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36; 
@3 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36;
@4 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36;
@5 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36;
@6 (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) < 36; 

