#define V -5

[-20, 100] tx;
[0, 90] bx;

[0, 1] time;

{mode 1;

  invt: 
  flow:
        d/dt[tx] = V; 
        d/dt[bx] = 0;
  jump:
        (and (tx < -5) (tx >= -10)) ==> 
          @1 (and (tx' = 100 + tx) (bx' = bx));
        (and (tx < 50) (tx >= 40)) ==>
          @2 (and (tx' = tx) (bx' = bx));
        (and (tx < 30) (tx >= 20)) ==>
          @3 (and (tx' = tx) (bx' = bx));
        (and (tx <= 0) (tx >= -5)) ==>
          @4 (and (tx' = tx) (bx' = bx));
}
{mode 2;

  invt: 
  flow:
        d/dt[tx] = V;    
        d/dt[bx] = 5;
  jump:
        (and (tx < -5) (tx >= -10)) ==> 
          @1 (and (tx' = 100 + tx) (bx' = bx));
        (and (tx < 50) (tx >= 40)) ==>
          @2 (and (tx' = tx) (bx' = bx));
        (and (tx < 30) (tx >= 20)) ==>
          @3 (and (tx' = tx) (bx' = bx));
        (and (tx <= 0) (tx >= -5)) ==>
          @4 (and (tx' = tx) (bx' = bx));
}
{mode 3;

  invt: 
  flow:
        d/dt[tx] = V;    
        d/dt[bx] = 10;
  jump:
        (and (tx < -5) (tx >= -10)) ==> 
          @1 (and (tx' = 100 + tx) (bx' = bx));
        (and (tx < 50) (tx >= 40)) ==>
          @2 (and (tx' = tx) (bx' = bx));
        (and (tx < 30) (tx >= 20)) ==>
          @3 (and (tx' = tx) (bx' = bx));
        (and (tx <= 0) (tx >= -5)) ==>
          @4 (and (tx' = tx) (bx' = bx));
}
{mode 4;

  invt: (bx > 80);
        (bx < 90); 
  flow:
        d/dt[tx] = V;    
        d/dt[bx] = -5;
  jump:
        (and (tx < -5) (tx >= -10)) ==> 
          @1 (and (tx' = 100 + tx) (bx' = bx));
        (and (tx < 50) (tx >= 40)) ==>
          @2 (and (tx' = tx) (bx' = bx));
        (and (tx < 30) (tx >= 20)) ==>
          @3 (and (tx' = tx) (bx' = bx));
        (and (tx <= 0) (tx >= -5)) ==>
          @4 (and (tx' = tx) (bx' = bx));
}


init:
@1  (and (bx >= 0) (bx < 1) (tx >= 60) (tx <= 70)); 

goal:
@1 (tx < 0.5);
@2 (tx < 0.5);
@3 (tx < 0.5);
@4 (tx < 0.5);
 

