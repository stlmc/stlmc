bool a;
[-20, 100] x1;
bool b;
[-20, 100] constx1;
[-20, 100] constx2;
[-20, 100] x2;
{
    mode:
        a == false;
        b == false ;
    inv:
        x1 > 0;
        (x2 > 0);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * constx1 + 0.01 * constx2);
        d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 + 0.01 * constx1);
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (not a') (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a == false;
        b == true;
    inv:
        x1 > 0;
        (x2 < 50);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * constx1 + 0.01 * constx2);
        d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a == true;
        b == false;
    inv:
        x1 < 50;
        (x2 > 0);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        d/dt[x2] = -0.045 * ((1 - 2* 0.01) * constx2 + 0.01 * constx1);
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a == true;
        b == true;
    inv:
        x1 < 50;
        (x2 < 50);
    flow:
        d/dt[constx1] = 0;
        d/dt[constx2] = 0;
        d/dt[x1] = 0.015 * (100 -((1 - 2 * 0.01) * constx1 + 0.01 * constx2));
        d/dt[x2] = 0.045 * (200 -((1 - 2 * 0.01) * constx2 + 0.01 * constx1));
    jump:
        (and (x1 > ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 > ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 > ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        (and (x1 <= ((x1 + x2) / 2)) (x2 <= ((x1 + x2) / 2))) ==>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));

}
init:
(and (a == false) (b == false) (x1 <= 21 + 0.1) (x1 >= 21 - 0.1) (x2 <= 21 + 0.1) (x2 >= 21 - 0.1) ((constx1 == x1) and (constx2 == x2)));

propositions:
reachability = x1 > 21 ;
ffourpt = x1 > 10 ;

goal:
(x1 > 21 and x1 < 23) ;




