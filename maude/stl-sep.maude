fmod STL-GT-SEP is
  protecting STL-GT .

  op sep : Formula NnRat -> Formula .

  var F1 F2 : Formula . 
  var I K : Interval .
  var NR : NnRat .

  eq sep(True,      NR) = True .
  eq sep(False,     NR) = True .
  eq sep(~ F1,      NR) = ~ sep(F1, NR) .
  eq sep(F1 /\ F2,  NR) = sep(F1, NR) /\ sep(F2, NR) .
  eq sep(F1 \/ F2,  NR) = sep(F1, NR) \/ sep(F2, NR) .
  eq sep(F1 -> F2,  NR) = sep(F1, NR) -> sep(F2, NR) .

  eq sep(F1 U K ~ I F2, NR) = (sep(F1, NR) U (K & [0, NR >) ~ I sep(F2, NR))
                           \/ (([] [0, NR > ~ [0,inf > sep(F1, NR)) /\ (([] [NR, inf > ~ [0,0] sep(F1,NR)) U (K & [NR, inf >) ~ I sep(F2, NR))) .

  eq sep(F1 R K ~ I F2, NR) = (sep(F1, NR) R (K & [0, NR >) ~ I sep(F2, NR))
                           /\ ((<> [0, NR > ~ [0,inf > sep(F1, NR)) \/ ((<> [NR, inf > ~ [0,0] sep(F1,NR)) R (K & [NR, inf >) ~ I sep(F2, NR))) .

  eq sep([] K ~ I F1, NR) = ([] (K & [0, NR >) ~ I sep(F1, NR)) /\ ([] (K & [NR, inf >) ~ I sep(F1, NR)) .
  eq sep(<> K ~ I F1, NR) = (<> (K & [0, NR >) ~ I sep(F1, NR)) \/ (<> (K & [NR, inf >) ~ I sep(F1, NR)) .
endfm


fmod STL-GT-SUGAR-SEP is
  protecting STL-GT-SEP .
  protecting STL-GT-SUGAR .

  var F1 F2 : Formula . 
  var I K : Interval .
  var NR : NnRat .

  eq sep(F1 U# K ~ I F2, NR) = (sep(F1, NR) U# (K & [0, NR >) ~ I sep(F2, NR))
                           \/ (([] K & [0, NR > ~ [0,inf > sep(F1, NR)) /\ (sep(F1,NR) U# (K & [NR, inf >) ~ I sep(F2, NR))) .

  eq sep(F1 R# K ~ I F2, NR) = (sep(F1, NR) R# (K & [0, NR >) ~ I sep(F2, NR))
                           /\ ((<> K & [0, NR > ~ [0,inf > sep(F1, NR)) \/ (sep(F1,NR) R# (K & [NR, inf >) ~ I sep(F2, NR))) .
endfm

fmod STL-GT-TEST is
  protecting BOOLEAN-SIMPLIFY .
  protecting STL-GT-DIST .
  protecting STL-GT-SIMPLIFY .
  protecting STL-GT-SUGAR-SIMPLIFY .
  protecting STL-GT-SUGAR-SEP .

  var F1 F2 : Formula . 
  var I K : Interval .
  var NR : NnRat .
endfm

red sep( ([] K ~ [0,0] F1) U K ~ I F2, 1) .

eof

red sep(sep(sep(sep(F1 U# [0,inf > ~ I F2, 1), 2), 3), 4) .
red sep(sep(sep(sep(F1 U# [0,inf > ~ I F2, 4), 3), 2), 1) .
