# logging: linear
# model description:
#
# Two rooms are connected by an open door.
# The room' temperature is controlled by
# its own heater and changes over time.
# It is also affected by each other's room
# temperature.

bool a;
[0, 30] x1;
bool b;
[0, 30] x2;
{
    mode:
        a = false;
        b = false ;
    inv:
        x1 >= 10;
        (x2 >= 10);
    flow:
        d/dt[x1] = -0.4;
        d/dt[x2] = -0.6;
    jump:
         x2 <= 19 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
         x2 <= 19 =>
           (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
         x1 <= 17 =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
         x1 <= 17 =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
}
{
    mode:
        a = false;
        b = true;
    inv:
        x1 >= 10;
        (x2 <= 30);
    flow:
        d/dt[x1] = -0.4;
        d/dt[x2] = 1;
    jump:
        x1 <= 17 =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
        x1 <= 17 =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
        x2 >= 23 =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        x2 >= 23 =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
}
{
    mode:
        a = true;
        b = false;
    inv:
        x1 <= 30;
        (x2 >= 10);
    flow:
        d/dt[x1] = 0.7;
        d/dt[x2] = -0.6;
    jump:
        x2 <= 19 =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
        x2 <= 19 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
        x1 >= 22 =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
        x1 >= 22 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));

}
{
    mode:
        a = true;
        b = true;
    inv:
        x1 <= 30;
        (x2 <= 30);
    flow:
        d/dt[x1] = 0.7;
        d/dt[x2] = 1;
    jump:
         x1 >= 22 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
         x1 >= 22 =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
         x2 >= 23  =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
         x2 >= 23  =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));

}


init:
(and not(a) not(b) (18 <= x1) (x1 <= 20) (22.5 <= x2) (x2 <= 23));

proposition:

# bound: 20, timebound: 30
goal:
[f1]: (<> [2, 5] (x1 < 23 R[2, 10] x2 > 24));   # threshold: 3
[f2]: [][1, 4] (x2 < 19 -> <>[5, 15] x2 > 23);      # threshold: 1
[f3]: (x2 > 18) U[10, 20] ([][3, 5] x1 < 19) ;       # threshold: 2.5


