# logging: poly
bool a;
[10, 30] x1;
bool b;
[10, 30] x2;
{
    mode:
        a = false;
        b = false ;
    inv:
        x1 >= 16;
        (x2 >= 16);
    flow:
        x1(t) = -0.35 * (t + 0.05 * t * t) + x1(0); 
        x2(t) = -0.55 * (t + 0.05 * t * t) + x2(0);
    jump:
         x2 < 22 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
         x1 < 22 =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));
}
{
    mode:
        a = false;
        b = true;
    inv:
        x1 >= 16;
        (x2 <= 25);
    flow:
        x1(t) = -0.35 * (t + 0.05 * t * t) + x1(0); 
        x2(t) = 1.2 * (0.5 * t + 0.05 * t * t) + x2(0);
    jump:
        x1 < 22 =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
        x2 > 20 =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));
}
{
    mode:
        a = true;
        b = false;
    inv:
        x1 <= 25;
        (x2 >= 16);
    flow:
        x1(t) =  1 * (0.5 * t + 0.05 * t * t) + x1(0);
        x2(t) = -0.55 * (t + 0.05 * t * t) + x2(0); 
    jump:
        x2 < 22 =>
          (and (a' = true) (b' = true) (x1' = x1) (x2' = x2));
        x1 > 20 =>
          (and (a' = false) (b' = false) (x1' = x1) (x2' = x2));

}
{
    mode:
        a = true;
        b = true;
    inv:
        x1 <= 25;
        (x2 <= 25);
    flow:
        x1(t) = 1 * (0.5 * t + 0.05 * t* t) + x1(0); 
        x2(t) = 1.2 * (0.5 * t + 0.05 * t* t) + x2(0);
    jump:
         x1 > 20 =>
          (and (a' = false) (b' = true) (x1' = x1) (x2' = x2));
         x2 > 20  =>
          (and (a' = true) (b' = false) (x1' = x1) (x2' = x2));

}


init:
(and not(a) not(b) (18 <= x1) (x1 <= 20) (22.5 <= x2) (x2 <= 23.5));

proposition:

# bound: 10, timebound: 10
goal:
[f1]: ([][2, 10] (x2 > 17)) U[1, 4] (x1 >= 22) ; # threshold: 0.5
[f2]: <> [0, 5] (x1 > 22 -> [] [2, 5) x1 < 18); # threshold: 0.1
[f3]: <> [0, 10] (x2 <= 25 R[2, 4] x1 > 22.5); # threshold: 1 


