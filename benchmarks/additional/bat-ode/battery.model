# logging: ode
# model description:
#
# There are two fully charged batteries, and a control
# system that switches load between these batteries.
# The goal of the control system is to achieve longer
# battery lifetime.

int b1;

[-10, 10] g1;
[-10, 10] d1;

# state
# 1 : ON
# 2 : OFF
# 3 : DEAD
{
    mode:
        b1 = 1;
    inv:
 	g1 >= 0;
    flow:
        d/dt[d1] = 2 + (0.122 * d1) ;
        d/dt[g1] = -0.5 ;
    jump:
        g1 > 1 =>
          (and (b1' = 2) (d1' = d1) (g1' = g1));
        g1 <= 0.5 =>
          (and (b1' = 3) (d1' = d1) (g1' = g1));
}
{
    mode:
        b1 = 2;
    inv:
	d1 > 0;
    flow:
        d/dt[d1] = -(0.05 * d1) ;
        d/dt[g1] = 0 ;
    jump:
        g1 > 1 =>
          (and (b1' = 1) (d1' = d1) (g1' = g1));
}
{
    mode:
        b1 = 3;
    inv:
    flow:
        d/dt[d1] = 0 ;
        d/dt[g1] = 0 ;
    jump:
}

init:
(and (b1 = 1) (8 <= g1) (g1 <= 8.5) (0 <= d1) (d1 <= 0.1));

proposition:

# bound: 5, timebound: 10
goal:
[f1]: <>[0, 4] (d1 >= 1 R[0, 5] g1 <= 7) ; # threshold: 1, time-horizon: 4
[f2]: [][3,4] (g1 < 6 -> <>[0, 6] d1 >= 3); # threshold: 1.5, time-horizon: 3
[f3]: [][1, 3](<>[0, 5] d1 > 1.5); # threshold: 1, time-horizon: 3
 

