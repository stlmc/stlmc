[-20, 100] x1;
[-20, 100] x2;
[0, 1] time;
{mode 1;
  invt: (x1 < 30);
        (x2 < 30);
  flow:
        d/dt[x1] = 0.015 * (100.0 - ((1 - 2 * 0.01) * x1 + 0.01 * x2));
        d/dt[x2] = 0.045 * (200.0 - ((1 - 2 * 0.01) * x2 + 0.01 * x1));
  jump:
        (and (x1 <= 20) (x2 <= 20)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 <= 20) (x2 > 20)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 <= 20)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 > 20)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 2;
  invt: (x1 < 30);
        (x2 > 10);
  flow:
        d/dt[x1] = 0.015 * (100.0 - ((1 - 2 * 0.01) * x1 + 0.01 * x2));
        d/dt[x2] = -0.045 * ((1 - 2 * 0.01) * x2 + 0.01 * x1);
  jump:
        (and (x1 <= 20) (x2 <= 20)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 <= 20) (x2 > 20)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 <= 20)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 > 20)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 3;
  invt: (x1 > 10);
        (x2 < 30);
  flow:
        d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * x1 + 0.01 * x2);
        d/dt[x2] = 0.045 * (200.0 - ((1 - 2 * 0.01) * x2 + 0.01 * x1));
  jump:
        (and (x1 <= 20) (x2 <= 20)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 <= 20) (x2 > 20)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 <= 20)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 > 20)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
{mode 4;
  invt: (x1 > 10);
        (x2 > 10);
  flow:
        d/dt[x1] = -0.015 * ((1 - 2 * 0.01) * x1 + 0.01 * x2);
        d/dt[x2] = -0.045 * ((1 - 2 * 0.01) * x2 + 0.01 * x1);
  jump:
        (and (x1 <= 20) (x2 <= 20)) ==>
          @1 (and (x1' = x1) (x2' = x2));
        (and (x1 <= 20) (x2 > 20)) ==>
          @2 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 <= 20)) ==>
          @3 (and (x1' = x1) (x2' = x2));
        (and (x1 > 20) (x2 > 20)) ==>
          @4 (and (x1' = x1) (x2' = x2));
}
init:
@4 (and (x1 >= 20 - 1) (x1 <= 20 + 1) (x2 >= 20 - 1) (x2 <= 20 + 1));
goal:
@1 (and (or (x1 < 20 - 1) (x1 > 20 + 1)) (or (x2 < 20 - 1) (x2 > 20 + 1)));
@2 (and (or (x1 < 20 - 1) (x1 > 20 + 1)) (or (x2 < 20 - 1) (x2 > 20 + 1)));
@3 (and (or (x1 < 20 - 1) (x1 > 20 + 1)) (or (x2 < 20 - 1) (x2 > 20 + 1)));
@4 (and (or (x1 < 20 - 1) (x1 > 20 + 1)) (or (x2 < 20 - 1) (x2 > 20 + 1)));
