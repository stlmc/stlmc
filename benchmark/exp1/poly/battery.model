# model description:
#
# There are two fully charged batteries, and a control
# system that switches load between these batteries.
# The goal of the control system is to achieve longer
# battery lifetime.

real b1;
real b2;

[0, 10] g1;
[0, 10] g2;
[-30, 30] d2;
[-30, 30] d1;

# state
# 1 : ON
# 2 : OFF
# 3 : DEAD
{
    mode:
        b1 = 1;
        b2 = 1;
    inv:
 	g1 > 2;
	g2 > 2;
    flow:
	d1(t) = 0.1 * (1 - 2 * t + 2 * t * t) + 0.5 + d1(0);
	d2(t) = 0.1 * (1 - 2 * t + 2 * t * t) + 0.5 + d2(0);
	g1(t) = -0.5 * t + g1(0);
	g2(t) = -0.5 * t + g2(0);
    jump:
        g1 > 1 =>
          (and (b1' = 1) (b2' = 2) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
        g2 > 1 =>
          (and (b1' = 2) (b2' = 1) (d1' = d1)  (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 1 ;
        b2 = 2 ;
    inv:
	g1 > 0.5;
	d2 > 1;
    flow:
	d1(t) = 0.1 * (1 - 2 * t + 2 * t * t) + 1 + d1(0);
	d2(t) = -0.1 * (1 - 2 * t + 2 * t * t) + d2(0);
	g1(t) = g1(0) - t;
	g2(t) = g2(0);
    jump:
        g2 > 1 =>
          (and (b1' = 2) (b2' = 1) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
        g1 <=1 =>
          (and (b1' = 3) (b2' = 1) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 2;
        b2 = 1;
    inv:
	d1 > 1;
	g2 > 0.5;
    flow:
	d1(t) = -0.1 * (1 - 2 * t + 2 * t * t) + d1(0); 
	d2(t) =  0.1 * (1 - 2 * t + 2 * t * t) + 1 + d2(0); 
	g1(t) = g1(0);
	g2(t) = g2(0) - t;
    jump:
	g1 > 1 =>
          (and (b1' = 1) (b2' = 2) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
        g2 <= 1 =>
          (and (b1' = 1) (b2' = 3) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));

}
{
    mode:
        b1 = 3;
        b2 = 1;
    inv:
	g1 < 1;
	g2 > 0.5;
    flow:
	d1(t) = d1(0);
	d2(t) = 0.1 * (1 - 2 * t + 2 * t * t) + 1 + d2(0);
	g1(t) = g1(0);
	g2(t) = g2(0) - t;
    jump:
       g2 <= 1 =>
          (and (b1' = 3) (b2' = 3) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 1;
        b2 = 3;
    inv:
	g1 > 0.5;
	g2 < 1;
    flow:
	d1(t) = 0.1 * (1 - 2 * t + 2 * t * t) + 1 + d1(0);
	d2(t) = d2(0);
	g1(t) = g1(0) - t;
	g2(t) = g2(0);
    jump:
	g1 <= 1 =>
          (and (b1' = 3) (b2' = 3) (d1' = d1) (d2' = (d2 - 0.122 * g2)) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 3;
        b2 = 3;
    inv:
    flow:
        d/dt[d1] = 0 ;
        d/dt[d2] = 0 ;
        d/dt[g1] = 0 ;
        d/dt[g2] = 0 ;
    jump:
}

init:
(and (b1 = 1) (b2 = 1) (8.4 <= g1) (g1 <= 8.5) (0 <= d1) (d1 <= 0.1) (7.4 <= g2) (g2 <= 7.5) (0 <= d2) (d2 <= 0.1)) ;

propositions:

#timebound 30
goal:
((g2 < 4) R [6, 20] (d2 >= 0)); 
[][4, 14] (g2 > 4 -> <>[0, 10] d2 > 1); 
[] [0,15] (g2 > 4.5 -> d2 > 15.5);
([] [0, 5] g1 > 1) U [0, 8.0) (b1 = 2) ; 

