hybrid reachability {
state var d1,d2,g1,g2,k,ff

setting 
{
    adaptive steps {min 0.01, max 0.05}
    time 30
    remainder estimation 1e-2
    identity precondition
    gnuplot octagon d1,d2 fixed orders 2
    cutoff 1e-12
    precision 53
    no output
    max jumps 5
    print on
}

modes {
	f1s1 {
		poly ode 1
		{
			d1' = 3 - (1.9 * d1)
			d2' = 3 - (1.9 * d2)
			g1' = -0.5
			g2' = -0.5
                        k' = 0
                        ff' = 0
		}
		inv 
		{
			g1 >= 0.5
			g2 >= 0.5
                        k <= 10
		}
	}
        f1s2 {
		poly ode 1
                {
                        d1' = 3 - (1.9 * d1)
                        d2' = -(1.9 * d2)
                        g1' = -1
                        g2' = 0
                        k' = 0
                        ff' = 0
                }
                inv
                {
                        g1 >= 0.5
                        k <= 10
                }
        }
        f2s1 {
                poly ode 1
                {
                        d1' = -(1.9 * d1)
                        d2' = 3 - (1.9 * d2)
                        g1' = 0
                        g2' = -1
                        k' = 0
                        ff' = 0
                }
                inv
                {
                        g2 >= 0.5
                        k <= 10
                }
        }
        f1s3 {
                poly ode 1
                {
                        d1' = 3 - (1.9 * d1)
                        d2' = 0
                        g1' = -1
                        g2' = 0
                        k' = 0
                        ff' = 0
                }
                inv
                {
			g1 >= 0.5
			g2 <= 1
                        k <= 10
                }
        }
        f3s1 {
                poly ode 1
                {
                        d1' = 0
                        d2' = 3 - (1.9 * d2)
                        g1' = 0
                        g2' = -1
                        k' = 0
                        ff' = 0
                }
                inv
                {
                        g1 <= 1
			g2 >= 0.5
                        k <= 10
                }
        }
        f3s3 {
                poly ode 1
                {
                        d1' = 0 
                        d2' = 0
                        g1' = 0
                        g2' = 0
                        k' = 0
                        ff' = 0
                }
                inv
                {
                        k <= 10
                }
        }

        goal {
                poly ode 1
                {
                }
                inv
                {
                }
        }
}

jumps{
	f1s1 -> f1s2
	guard { g1 >= 2 }
	reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
	parallelotope aggregation { }

        f1s1 -> f2s1
        guard { g2 >= 2 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }


        f1s2 -> f2s1
        guard { g2 >= 2 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f1s2 -> f3s1
        guard { g1 <= 1 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f2s1 -> f1s2
        guard { g1 >= 2 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f2s1 -> f1s3
        guard { g2 <= 1 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f3s1 -> f3s3
        guard { g2 <= 1 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f1s3 -> f3s3
        guard { g1 <= 1 }
        reset { d1' := d1 d2' := d2 g1' := g1 g2' := g2 k' := k + 1}
        parallelotope aggregation { }

        f1s1 -> goal
        guard {g1 <= 3}
        reset{}
        parallelotope aggregation { }

        f1s2 -> goal
        guard {g1 <= 3} 
        reset{}
        parallelotope aggregation { }

        f2s1 -> goal
        guard {g1 <= 3}
        reset{}
        parallelotope aggregation { }

        f1s3 -> goal
        guard {g1 <= 3}
        reset{}
        parallelotope aggregation { }

        f3s1 -> goal
        guard {g1 <= 3}
        reset{}
        parallelotope aggregation { }

        f3s3 -> goal
        guard {g1 <= 3}
        reset{}
        parallelotope aggregation { }
}


init {
	f1s1 {
		g1 in [8.4, 8.5]
		g2 in [7.4, 7.5]
		d1 in [0, 0.1]
		d2 in [0, 0.1]	
                k in [0, 0]
                ff in [0,0]  
	}
} 
}

unsafe
{
	f1s1{ff >= 1}
        f1s2{ff >= 1}
        f2s1{ff >= 1}
        f1s3{ff >= 1}
	f3s1{ff >= 1}
	f3s3{ff >= 1}
        goal{}
}
