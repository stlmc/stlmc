bool a;
[0, 10] x1;
bool b;
[0, 10] x2;
{
    mode:
        a = false;
        b = false ;
    inv:
        x1 >= 1;
        (x2 >= 1);
    flow:
        x1(t) = 0.005 * t * t - 0.4 * t + x1(0); 
        x2(t) = 0.005 * t * t - 0.6 * t + x2(0); 
    jump:
        x2 <= 3 =>
          (and (not a') b' (x1' = x1) (x2' = x2));
        (x1 <= 2) =>
          (and a' (not b') (x1' = x1) (x2' = x2));
}
{
    mode:
        a = false;
        b = true;
    inv:
        x1 >= 1;
        (x2 <= 9);
    flow:
        x1(t) =  0.005 * t * t - 0.4 * t + x1(0); 
        x2(t) = 0.5 * t + 0.02 * t * t + x2(0); 
    jump:
        x2 >= 6 =>
          (and (not a') (not b') (x1' = x1) (x2' = x2));
        x1 <= 2 =>
          (and a' b' (x1' = x1) (x2' = x2));
}
{
    mode:
        a = true;
        b = false;
    inv:
        x1 <= 9;
        (x2 >= 1);
    flow:
        x1(t) = 0.4 * t + 0.02 * t * t + x1(0); 
        x2(t) = 0.005 * t * t - 0.6 * t + x2(0); 
    jump:
        x1 >= 5 =>
          (and (not a') (not b') (x1' = x1) (x2' = x2));
        x2 <= 3 =>
          (and a' b' (x1' = x1) (x2' = x2));
}
{
    mode:
        a = true;
        b = true;
    inv:
        x1 <= 9;
        (x2 <= 9);
    flow:
        x1(t) = 0.4 * t + 0.02 * t * t + x1(0); 
        x2(t) = 0.5 * t + 0.02 * t * t + x2(0); 
    jump:
        x1 >= 5 =>
          (and (not a') b' (x1' = x1) (x2' = x2));
        x2 >= 6 =>
          (and a' (not b') (x1' = x1) (x2' = x2));
}
init:
(and (not(a)) not(b) (4 <= x1) (x1 <= 5)  (5 <= x2) (x2 <= 6));

propositions:

# timebound : 10
goal:
~(<>[0,inf) (x2 <= 0.4)) ;
~(<>[0,inf) (x1 >= 1));
