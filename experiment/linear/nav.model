bool dx;
bool dy;
[0, 100] x;
[0, 100] y;
# zone 1
#   x: decrease, y: decrease
{
    mode:
        dx = false;
        dy = false;
    inv:
        x <= 50;
        y >= 50;
    flow:
        d/dt[x] = -3.5;
        d/dt[y] = -3.5;
    jump:
        (and (x <= 50) (y <= 50)) =>
          (and (dx' = true) (dy' = false) (x' = x) (y' = y));
}
# zone 2
#   x: decrease, y: increase
{
    mode:
        dx = false;
        dy = true;
    inv:
        x >= 50;
        y >= 50;
    flow:
        d/dt[x] = -3.5;
        d/dt[y] = 3.5;
    jump:
        (and (x <= 50) (y >= 50)) =>
          (and (dx'= false) (dy' = false) (x' = x) (y' = y));
}
# zone 3
#   x: increase, y: decrease
{
    mode:
	dx = true;
	dy = false;
    inv:
        x <= 50;
        y <= 50;
    flow:
        d/dt[x] = 3.5;
        d/dt[y] = -3.5;
    jump:
        (and (x >= 50) (y <= 50)) =>
          (and (dx' = true) (dy' = true) (x' = x) (y' = y));
}
# zone 4
#   x: increase, y: increase
{
    mode:
        dx = true;
        dy = true;
    inv:
        x >= 50;
        y <= 50;
    flow:
        d/dt[x] = 3.5;
        d/dt[y] = 3.5;
    jump:
        (and (x >= 50) (y >= 50)) =>
          (and (dx'= false) (dy' = true) (x' = x) (y' = y));
}


init:
(and (not(dx)) not(dy) (29 <= x) (x <= 31) (79 <= y) (y <= 81));

propositions:
xg80 = x > 50;
yl50 = y < 50;
xg60 = x > 60;
xg70 = x > 70;
xInc = dx;
yInc = dy;

# timebound 20
goal:
<>[5, 10] (y >= 30); # true
(<> [1, 4) y >= 50) R[3, 10] ~yInc; # true
<>[5, 20](x > 40); # false at 3
([] [2, 4) (<>[3, 15] (xInc and yInc))); # false at 3
([][3, 5] (<>[2, 5] y > 40)); # false at 8
(<>[2, 5] (x > 40 U[0, 10] yInc)); # false at  3
 

