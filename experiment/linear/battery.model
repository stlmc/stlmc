# model description:
#
# There are two fully charged batteries, and a control
# system that switches load between these batteries.
# The goal of the control system is to achieve longer
# battery lifetime.

real b1;
real b2;

[0, 10] g1;
[0, 10] g2;
[0, 10] d2;
[0, 10] d1;

# state
# 1 : ON
# 2 : OFF
# 3 : DEAD 
{
    mode:
        b1 = 1;
        b2 = 1;
    inv:
 	g1 > 0.5;
	g2 > 0.5;
    flow:
        d/dt[d1] = 1;
        d/dt[d2] = 1  ;
        d/dt[g1] = -0.3 ;
        d/dt[g2] = -0.3 ;
    jump:
        g1 > 1 => 
          (and (b1' = 1) (b2' = 2) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
        g2 > 1 => 
          (and (b1' = 2) (b2' = 1) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 1 ;
        b2 = 2 ;
    inv:
	g1 > 0.5;
    flow:
        d/dt[d1] = 0.8;
        d/dt[d2] = -0.166 ;
        d/dt[g1] = -0.5;
        d/dt[g2] = 0 ;
    jump:
        g2 > 1 => 
          (and (b1' = 2) (b2' = 1) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2)); 
        g1 > 1 => 
          (and (b1' = 1) (b2' = 1) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
        g1 <=1 => 
          (and (b1' = 3) (b2' = 1) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 2;
        b2 = 1;
    inv:
	g2 > 0.5;
    flow:
        d/dt[d1] = -0.166 ;
        d/dt[d2] = 0.8 ;
        d/dt[g1] = 0 ;
        d/dt[g2] = -0.5 ;
    jump:
	g1 > 1 =>
          (and (b1' = 1) (b2' = 2) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
	g2 > 1 =>        
          (and (b1' = 1) (b2' = 1) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
        g2 <= 1 => 
          (and (b1' = 1) (b2' = 3) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));

}
{
    mode:
        b1 = 3;
        b2 = 1;
    inv:
	g1 < 1;
	g2 > 0.5;
    flow:
        d/dt[d1] = 0 ;
        d/dt[d2] = 0.7 ;
        d/dt[g1] = 0 ;
        d/dt[g2] = -7 ;
    jump:
       g2 <= 1 =>
          (and (b1' = 3) (b2' = 3) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2));
}
{
    mode:
        b1 = 1;
        b2 = 3;
    inv:
	g1 > 0.5;
	g2 < 1;
    flow:
        d/dt[d1] = 0.7;
        d/dt[d2] = 0; 
        d/dt[g1] = -7 ;
        d/dt[g2] = 0 ;
    jump:
	g1 <= 1 =>
          (and (b1' = 3) (b2' = 3) (d1' = d1) (d2' = d2) (g1' = g1) (g2' = g2)); 
}
{
    mode:
        b1 = 3;
        b2 = 3;
    inv:
    flow:
        d/dt[d1] = 0 ; 
        d/dt[d2] = 0 ;
        d/dt[g1] = 0 ;
        d/dt[g2] = 0 ;
    jump:
}

init:
(and (b1 = 1) (b2 = 1) (g1 = 8.5) (d1 = 0) (g2 = 7.5) (d2 = 0)) ;

propositions:
reachability = g2 < 4;
modeLL = (d1 > 0.3); 
donegzero = d1 > 0.2 ;
dtwogzero = d2 > 0.2;
modeDD = (d1 < 0.1); 

#timebound 30
goal:
<> [3, 10] ([][0, 8.0) (d2 < 1)) ; # false at 6
[] [0, 15] g2 > 5; # false at bound 5
((g2 < 6) R [4, 20] (d1 > 3)); # true
(<> [5.0, 20.0) donegzero); # true
(<> [0, 13](g1 < 4)) R [0, 5] (g1 > 2); #true
