# Hill Climbing Car
# 

const real variance = 0.5;

bool isfail;

[0, 5] tl;


# state
# 1: flat
# 2: uphill
# 3: downhill
# 4: fall

{
    mode:
        isfail = false;
    inv:
	t > 0;
    flow:
        d/dt[tl] = -1;
    jump:
        (tl <= 0) =>
         (and (isfail' = true) (tl' = tl)); 
}

{
   mode:
       isfail = true;
   inv:
       
   flow:
        d/dt[tl] = 0;
   jump:
}

init:
(and (isfail = false) (tl = 5)); 

propositions:

goal:
#reach isfail;
([] [0, 1000] ~isfail);
#([] [0, 10] (<> [1, 4] (a > 0)));
# ([] [0, 10] (or (and (slope0 > 0) (a <= -19 * slope0 + 30)) (and (slope0 < 0) (a <= 19 * slope0 + 30)) (slope0 = 0)));
# ([] [0, 100] (slope0 >= 0));
# (<> [0, 15] (tl = 0));
