#define n 4.7351
#define m 500.0
#define Fx -5.0
#define Fy -5.0
#define K1 1.0
#define K2 2.0
#define T1 10.0
#define T2 80.0

[0, 150] x;
[0, 150] vx;
[0, 150] ax;

[0, 150] y;
[0, 150] vy;
[0, 150] ay;

[0, 100] tau;
[0, 1] time;

{mode 1;

  invt: (tau <= T2);
        (sqrt(x * x + y * y) >= 100);
  flow:
        d/dt[x] = vx; 
        d/dt[vx] = ax;
        d/dt[ax] = 3 * n * n * x + 2 * n * vy + K1 * Fx / m;
        d/dt[y] = vy;
        d/dt[vy] = ay;
        d/dt[ay] = -2 * n * vx + K1 * Fy / m;
        d/dt[tau] = 1;
  jump:
        sqrt(x * x + y * y) >= 100 ==> 
        @1 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay));

        sqrt(x * x + y * y) <= 100 ==>
	@2 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay)); 

        (and (tau >= T1) (tau <= T2)) ==>
	@3 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay)); 
}
{mode 2;

  invt: (tau <= T2);
        (sqrt(x * x + y * y) <= 100);
  flow:
        d/dt[x] = vx;
        d/dt[vx] = ax;
        d/dt[ax] = 3 * n * n * x + 2 * n * vy + K2 * Fx / m;
        d/dt[y] = vy;
        d/dt[vy] = ay;
        d/dt[ay] = -2 * n * vx + K2 * Fy / m;
        d/dt[tau] = 1;
  jump:
        sqrt(x * x + y * y) >= 100 ==>
        @1 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay));

        sqrt(x * x + y * y) <= 100 ==>
        @2 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay));

        (and (tau >= T1) (tau <= T2)) ==>
        @3 (and (x' = x) (vx' = vx) (ax' = ax) (tau' = tau) (y' = y) (vy' = vy) (ay' = ay));
}
{mode 3;

  invt: (tau >= T1);
  flow:
        d/dt[x] = vx;
        d/dt[vx] = ax;
        d/dt[ax] = 3 * n * n * x + 2 * n * vy;
        d/dt[y] = vy;
        d/dt[vy] = ay;
        d/dt[ay] = -2 * n * vx;
        d/dt[tau] = 1;
  jump:

}

init:
@1  (and (tau = 0) (x >= 90) (x <= 120) (y >= 90) (y <= 120) (vx >= 10) (vx <= 12) (vy >= 10) (vy <= 12) (ax >= 2) (ax <= 4) (ay >= 2) (ay <= 4));

goal:
@1 true; 
@2 true; 
@3 true;

