[-10, 10] d1;
[-10, 10] d2;
[-10, 10] g1;
[-10, 10] g2;
[0, 0.01] time;
[0, 50] tau;
{mode 1;
  invt:
  flow:
        d/dt[d1] = (0.5 / 0.166) - (0.122 * d1);
        d/dt[g1] = -0.5;
        d/dt[d2] = (0.5 / 0.166) - (0.122 * d2);
        d/dt[g2] = -0.5;
        d/dt[tau] = 1;
  jump:
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @1 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @2 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @3 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @4 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @5 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @6 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
}
{mode 2;
  invt:
  flow:
        d/dt[d1] = (1 / 0.166) - (0.122 * d1);
        d/dt[g1] = -1;
        d/dt[d2] = - (0.122 * d2);
        d/dt[g2] = 0;
        d/dt[tau] = 1;
  jump:
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @1 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @2 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @3 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @4 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @5 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @6 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
}
{mode 3;
  invt:
  flow:
        d/dt[d1] = - (0.122 * d1);
        d/dt[g1] = 0;
        d/dt[d2] = (1 / 0.166) - (0.122 * d2);
        d/dt[g2] = -1;
        d/dt[tau] = 1;
  jump:
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @1 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @2 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @3 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @4 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 > ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @5 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @6 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
}
{mode 4;
  invt:
  flow:
        d/dt[d1] = 0;
        d/dt[g1] = 0;
        d/dt[d2] = (1 / 0.166) - (0.122 * d2);
        d/dt[g2] = -1;
        d/dt[tau] = 1;
  jump:
        (and (g1 <= ((1-0.166)*d1)) (g2 > ((1-0.166)*d2))) ==>
        @4 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @6 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
}
{mode 5;
  invt:
  flow:
        d/dt[d1] = (1 / 0.166) - (0.122 * d1);
        d/dt[g1] = -1;
        d/dt[d2] = 0;
        d/dt[g2] = 0;
        d/dt[tau] = 1;
  jump:
        (and (g1 > ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @5 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
        (and (g1 <= ((1-0.166)*d1)) (g2 <= ((1-0.166)*d2))) ==>
        @6 (and (d1' = d1) (g1' = g1) (d2' = d2) (g2' = g2) (tau' = tau));
}
{mode 6;
  invt:
  flow:
        d/dt[d1] = 0;
        d/dt[g1] = 0;
        d/dt[d2] = 0;
        d/dt[g2] = 0;
        d/dt[tau] = 1;
  jump:
}
init:
@1 (and (g1 = 8.5) (d1 = 0) (g2 = 7.5) (d2 = 0) (tau = 0));
goal:
@1 (tau >= 0);
@2 (tau >= 0);
@3 (tau >= 0);
@4 (tau >= 0);
@5 (tau >= 0);
