
#define L1 1
#define L2 1.5
#define C 2


#define gT 15

[0, 10] v1;
[0, 10] v2;

[0, 100] x1;
[0, 100] y1;

[0, 100] x2;
[0, 100] y2;

[-1, 1] phi1;
[-1, 1] phi2;

[-1.5, 1.5] theta1;
[-1.5, 1.5] theta2;

[0, 1] time;

{mode 1;

  invt: 
  flow:
        d/dt[x1] = v1 * cos(theta1); 
        d/dt[y1] = v1 * sin(theta1);
        d/dt[x2] = v1 * cos(theta2);
        d/dt[y2] = v1 * sin(theta2);
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v1 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
        d/dt[v1] = 0;
        d/dt[v2] = -(v2 - v1);
  jump:
        (and (((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) >= 36) (((x2 - x1) * (x2 - x1) - (y2 - y1) * (y2 - y1)) <= 81)) ==> 
        @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) > 81 ==>
        @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) < 36 ==>   
        @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

}
{mode 2;

  invt:
       
  flow:
        d/dt[x1] = v1 * cos(theta1);
        d/dt[y1] = v1 * sin(theta1);
        d/dt[x2] = v1 * cos(theta2);
        d/dt[y2] = v1 * sin(theta2);
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v1 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
        d/dt[v1] = 0;
        d/dt[v2] = 5;
  jump:
        (and (((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) >= 36) (((x2 - x1) * (x2 - x1) - (y2 - y1) * (y2 - y1)) <= 81)) ==>
        @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) > 81 ==>
        @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) < 36 ==>
        @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

}
{mode 3;

  invt:
       
  flow:
        d/dt[x1] = v1 * cos(theta1);
        d/dt[y1] = v1 * sin(theta1);
        d/dt[x2] = v1 * cos(theta2);
        d/dt[y2] = v1 * sin(theta2);
        d/dt[theta1] = v1 * tan(phi1);
        d/dt[theta2] = v1 * tan(phi2);
        d/dt[phi1] = 0;
        d/dt[phi2] = -(phi2 - phi1);
        d/dt[v1] = 0;
        d/dt[v2] = -5;
  jump:
        (and (((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) >= 36) (((x2 - x1) * (x2 - x1) - (y2 - y1) * (y2 - y1)) <= 81)) ==>
        @1 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) > 81 ==>
        @2 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

        ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) < 36 ==>
        @3 (and (x1' = x1) (x2' = x2) (y1' = y1) (y2' = y2) (theta1' = theta1) (theta2' = theta2) (phi1' = phi1) (phi2' = phi2) (v1' = v1) (v2' = v2));

}

init:
@1  (and (x1 = 0) (x2 = 10) (y1 = 10) (y2 = 10) (v1 = 3) (v2 = 4) (theta1 = 0) (theta2 = 0) (phi1 = 5) (phi2 = -5));

goal:
@1  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)));
@2  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)));
@3  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)));

